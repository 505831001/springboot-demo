<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.springboot.nacos</groupId>
    <artifactId>springboot-nacos</artifactId>
    <packaging>pom</packaging>
    <version>0.0.1-SNAPSHOT</version>

    <!--
    Nacos 有三大主要功能：
    1. 服务发现和服务健康监测。
        1.1 Nacos 支持基于 DNS 和基于 RPC 的服务发现。服务提供者使用原生SDK、OpenAPI、或一个独立的Agent TODO注册 Service 后，服务消费者可以使用DNS TODO 或HTTP&API查找和发现服务。
        1.2 Nacos 提供对服务的实时的健康检查，阻止向不健康的主机或服务实例发送请求。
        1.3 Nacos 支持传输层 (PING 或 TCP)和应用层 (如 HTTP、MySQL、用户自定义）的健康检查。对于复杂的云环境和网络拓扑环境中（如 VPC、边缘网络等）服务的健康检查，Nacos 提供了 agent 上报模式和服务端主动检测2种健康检查模式。
        1.4 Nacos 还提供了统一的健康检查仪表盘，帮助您根据健康状态管理服务的可用性及流量。
    2. 动态配置服务。
        2.1 动态配置服务可以让您以中心化、外部化和动态化的方式管理所有环境的应用配置和服务配置。
        2.2 动态配置消除了配置变更时重新部署应用和服务的需要，让配置管理变得更加高效和敏捷。
        2.3 配置中心化管理让实现无状态服务变得更简单，让服务按需弹性扩展变得更容易。
        2.4 Nacos 提供了一个简洁易用的UI (控制台样例 Demo) 帮助您管理所有的服务和应用的配置。
        2.5 Nacos 还提供包括配置版本跟踪、金丝雀发布、一键回滚配置以及客户端配置更新状态跟踪在内的一系列开箱即用的配置管理特性，帮助您更安全地在生产环境中管理配置变更和降低配置变更带来的风险。
    3. 动态 DNS 服务。
        3.1 动态 DNS 服务支持权重路由，让您更容易地实现中间层负载均衡、更灵活的路由策略、流量控制以及数据中心内网的简单DNS解析服务。
        3.2 动态 DNS 服务还能让您更容易地实现以 DNS 协议为基础的服务发现，以帮助您消除耦合到厂商私有服务发现 API 上的风险。
        3.3 Nacos 提供了一些简单的 DNS APIs TODO 帮助您管理服务的关联域名和可用的 IP:PORT 列表。
    4. 服务及其元数据管理。
        4.1 Nacos 能让您从微服务平台建设的视角管理数据中心的所有服务及元数据，包括管理服务的描述、生命周期、服务的静态依赖分析、服务的健康状态、服务的流量管理、路由及安全策略、服务的 SLA 以及最首要的 metrics 统计数据。
        4.2 Nacos 基本上支持现在所有类型的服务，例如，Dubbo / gRPC服务，Spring Cloud RESTFul服务或Kubernetes服务。
    Nacos 依赖包：
    1. 整合 SpringBoot 工程：config 和 discovery。
        <dependency>
            <groupId>com.alibaba.boot</groupId>
            <artifactId>nacos-config-spring-boot-starter</artifactId>
            <version>0.2.1</version>
        </dependency>
        <dependency>
            <groupId>com.alibaba.boot</groupId>
            <artifactId>nacos-discovery-spring-boot-starter</artifactId>
            <version>0.2.1</version>
        </dependency>
        1.1 相应注解。
        @EnableNacosConfig    - 用于启用 Nacos 配置特性的注释。
        @EnableNacosDiscovery - 用于启用 Nacos 发现功能的注释。
        @NacosPropertySource(dataId = "itsc-nacos-config-dev.properties", groupId = "dev", autoRefreshed = true) - Nacos的注释{属性资源}。
        @NacosValue(value = "${server.port}", autoRefreshed = true) - 扩展值以支持自动刷新的注释。
        @RefreshScope         - 方便的注释，把@Bean定义放在{@RefreshScope 刷新}范围。
        1.2 相关配置。
        ### the Nacos.config ###
        nacos.config.server-addr=127.0.0.1:8848
        nacos.config.namespace=fb2a5024-905e-4bfa-8f68-f066d46f0daa
        nacos.config.encode=UTF-8
        ### the Nacos.discovery ###
        nacos.discovery.server-addr=127.0.0.1:8848
        nacos.discovery.namespace=fb2a5024-905e-4bfa-8f68-f066d46f0daa
    2. 整合 SpringCloud 工程：config 和 discovery。
        - dependencyManagement
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-dependencies</artifactId>
            <version>Finchley.SR1</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-dependencies</artifactId>
            <version>2.2.4.RELEASE</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-alibaba-dependencies</artifactId>
            <version>0.9.0.RELEASE</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>
        - dependencies
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
        </dependency>
        1.1 相应注解。
        @LoadBalanced         - 注释，将 RestTemplate bean 标记为要配置为使用 LoadBalancerClient。
        2.2 相关配置。

     -->

    <modules>
        <module>springboot-nacos-config</module>
        <module>springboot-nacos-producer</module>
        <module>springboot-nacos-consumer</module>
    </modules>

</project>