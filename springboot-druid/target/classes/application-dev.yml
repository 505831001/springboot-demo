spring:
  datasource:
    name: dataSource01 #如果存在多个数据源，监控的时候可以通过名字来区分开来。如果没有配置，将会生成一个名字，格式是："DataSource-" + System.identityHashCode(this)
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/ego?useUnicode=true&characterEncoding=utf8&useSSL=false
    username: root
    password: 123456
    # 下面为连接池的补充设置
    druid:
      initialSize: 10   #初始化连接个数
      minIdle: 10       #最小空闲连接个数
      maxActive: 100    #最大连接个数
      maxWait: 60000    #获取连接时最大等待时间，单位毫秒。
      timeBetweenEvictionRunsMillis: 60000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      minEvictableIdleTimeMillis: 30000     #配置一个连接在池中最小生存的时间，单位是毫秒
      validationQuery: select 'x'     #用来检测连接是否有效的sql，要求是一个查询语句。
      testWhileIdle: true             #建议配置为true，不影响性能，并且保证安全性。如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      testOnBorrow: true              #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      testOnReturn: false             #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      poolPreparedStatements: false   #是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      maxPoolPreparedStatementPerConnectionSize: -1 #要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      filters: stat,wall,log4j,config #通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat，日志用的filter:log4j，防御sql注入的filter:wall
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000 #通过connectProperties属性来打开mergeSql功能；慢SQL记录
      useGlobalDataSourceStat: false  #合并多个DruidDataSource的监控数据

## resources/mapper 非<配置在pom.xml中>：java/mapper ##
## Action: ##
## org.apache.ibatis.binding.BindingException: Invalid bound statement (not found):  ##
mybatis:
  mapper-locations: classpath*:mapper/*.xml
  type-aliases-package: org.liuweiwei.dao
